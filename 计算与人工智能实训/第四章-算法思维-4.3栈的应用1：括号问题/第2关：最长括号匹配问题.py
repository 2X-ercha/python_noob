'''
任务描述
本关任务：给定一个只包括 ‘(‘，’)’，’{‘，’}’，’[‘，’]’ 的字符串，找出字符串中最长的语法正确的子字符串，输出其长度。
有效字符串需满足：
1  左括号必须用相同类型的右括号闭合。
2  左括号必须以正确的顺序闭合。

相关知识
为了完成本关任务，你需要掌握：1.栈

编程要求
根据提示，在右侧编辑器补充代码，输出其中最长的括号正确匹配的子序列的长度。

测试说明
输入是一个字符串，为连续的各种括号()[]{}
平台会对你编写的代码进行测试：

测试输入：
(({)}[()])
预期输出：
4

测试输入：
({}[()])
预期输出：
8

提示
1 放入栈中的元素应该是字符的位置，而不是字符本身。
2 每次遇到某个字符（设该字符位置为i）和栈顶指示位置的字符匹配时，从栈中弹出该元素，再查看一下现在栈顶元素所指示的位置（设为j），则本次的最大长度为j-1；找出最大的长度即可。
3 最开始要在栈中放入-1，以保证栈中的元素都消去时的正确性。
'''

from queue import LifoQueue
#括号匹配
S=input() #输入的字符串
stack=LifoQueue(maxsize=0)
########## begin ##########
# 请在此填写代码
stack.put(-1)
len,maxlen=0,0
for i,s in enumerate(S):
    t=stack.get()
    if t==-1:
        stack.put(-1)
        stack.put(i)
    else:
        x=S[t]
        if (s==')' and x=='(') or (s==']' and x=='[') or (s=='}' and x=='{'):
            a=stack.get()
            len=i-a
            stack.put(a)
            if len>maxlen:maxlen=len
        else:
            stack.put(t)
            stack.put(i)
print(maxlen)
########## end ##########